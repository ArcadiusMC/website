<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Usables on ArcadiusMC</title><link>/adminwiki/usables/</link><description>Recent content in Usables on ArcadiusMC</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/adminwiki/usables/index.xml" rel="self" type="application/rss+xml"/><item><title>Block Usables</title><link>/adminwiki/usables/blocks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/adminwiki/usables/blocks/</guid><description>Block usables are usables attached to block entities, they are triggered when you right click the block in question. Other interactions such as breaking, damaging or walking over a block (in the case of pressure plates) are not supported.
Creating a usable block To create a usable block you simply have to add an action or condition to a specified block.
For this example, we&amp;rsquo;ll add a simple show_text action to a chest that&amp;rsquo;ll tell a player &amp;ldquo;Hello, &amp;lt;player name&amp;gt;!</description></item><item><title>Reference</title><link>/adminwiki/usables/ref/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/adminwiki/usables/ref/</guid><description>Reference Types that act as both actions and conditions.
Items Actions:
give_items: Give players items. When giving items, it&amp;rsquo;ll first attempt to insert the items into a player&amp;rsquo;s inventory, if that fails, it simply drops the items at the player&amp;rsquo;s feet. take_items: removes items from any slot in the player&amp;rsquo;s inventory. Conditions:
has_items: Tests if a player has all specified items. does_not_have_items: Tests if a player does NOT have the specified items.</description></item><item><title>Context Values</title><link>/adminwiki/usables/context/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/adminwiki/usables/context/</guid><description>Context values are contextual values that you&amp;rsquo;ll most likely only interact with when writing scripts.
Accessing (via script functions) Context values can be accessed and changed with the following script functions:
getContextValue(name): Gets a context value, or null if the value is not set. requireContextValue(name): Gets a context value, or throws an error if the value is not present. listContextValues(): Gets an array of context value names. setContextValue(name, value): Sets the value of a context entry.</description></item><item><title>Usables Scripting</title><link>/adminwiki/usables/scripts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/adminwiki/usables/scripts/</guid><description>General You can use scripts with Usables with the script_file or js actions. And scripts can be used as conditions with the test_script or js conditions.
Built in functions Usables script have built in functions:
getData(): Any user-defined data object that is persisted beyond the script&amp;rsquo;s lifetime. setData(data): Sets the script&amp;rsquo;s persistent data, can be any JS object, array or primitive. More built in functions for accessing and modifying interaction context can be found at Context Values.</description></item></channel></rss>