<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Scripting on ArcadiusMC</title><link>/adminwiki/scripts/</link><description>Recent content in Scripting on ArcadiusMC</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/adminwiki/scripts/index.xml" rel="self" type="application/rss+xml"/><item><title>Events</title><link>/adminwiki/scripts/events/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/adminwiki/scripts/events/</guid><description>Examples The following are various examples of how the events object can be used
Simple event registration // Declare the Java type import JoinEvent from &amp;#34;org.bukkit.event.player.PlayerJoinEvent&amp;#34; // Register a function to list to the given event events.register(JoinEvent, onPlayerJoin); // Function called when event is triggered function onPlayerJoin(event) { logger.info(&amp;#34;Player {} joined the server!&amp;#34;, event.player.getName()); } Prioritized listener registration Please see The Bukkit Wiki for information about EventPriority.
// Register a function to list to the given event with the LOWEST // priority events.</description></item><item><title>Task Scheduling</title><link>/adminwiki/scripts/tasks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/adminwiki/scripts/tasks/</guid><description>ArcadiusMC&amp;rsquo;s scripting abstractions allow for the scheduling of delayed and repeating tasks. All tasks that can be scheduled will be executed on the main thread.
Examples All intervals passed to the scheduler are measured in ticks.
Scheduling a delayed task scheduler.runLater(10 /* Delay in ticks */, task =&amp;gt; { // Perform some action }); Scheduling a repeating task scheduler.runTimer(10 /* Initial Delay */, 10 /* Repeating delay*/, task =&amp;gt; { }); Scheduling a task that only runs n number of times const MAX_RUNS = 20; var runCount = 0; scheduler.</description></item></channel></rss>